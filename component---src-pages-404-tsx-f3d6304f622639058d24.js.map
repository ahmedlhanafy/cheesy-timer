{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/FancyButton.ts","webpack:///./.cache/public-page-renderer.js","webpack:///../src/utils/analytics.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/shared/hooks/usePersistentTheme.ts","webpack:///./src/components/GithubCornerr.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Image.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/Spinner.tsx","webpack:///./src/components/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","_components_FancyButton__WEBPACK_IMPORTED_MODULE_4__","StyledLink","styled","Link","withConfig","displayName","componentId","FancyButtonStyles","Emoji","h1","Title","props","theme","primaryTextColor","NotFoundPage","a","createElement","title","to","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","css","buttonColor","color","alpha","rgb","toString","button","m","module","exports","require","default","trackEvent","track","ga","_ref","category","action","cb","event","eventCategory","eventAction","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","darkTheme","backgroundColor","isDark","GithubCorner","url","react_default","onClick","href","className","aria-label","width","height","viewBox","style","fill","position","top","border","right","aria-hidden","transformOrigin","Container","div","GlobalStyles","createGlobalStyle","_templateObject","Layout","Fragment","styled_components_browser_esm","GithubCornerr","Image","gatsby_browser_entry","gatsby_image_default","marginTop","fluid","placeholderImage","childImageSharp","_4004464385","SEO","description","lang","meta","keywords","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","rel","_1841633742","defaultProps","SKRotateKeyFrames","keyframes","SKBounceKeyFrames","DotStyle","SpinnerContainer","Dot2","Dot1","Spinner","components_Layout","components_Image","components_SEO","components_Spinner"],"mappings":"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","file":"component---src-pages-404-tsx-f3d6304f622639058d24.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { SEO, Layout } from '../components';\nimport { Link } from 'gatsby';\nimport { FancyButtonStyles } from '../components/FancyButton';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <Emoji>ðŸ˜°</Emoji>\n    <Title>404 Not Found</Title>\n    <StyledLink to=\"/\">Go back</StyledLink>\n  </Layout>\n);\n\nconst StyledLink = styled(Link)`${FancyButtonStyles}`;\n\nconst Emoji = styled.h1`\n  font-size: 78px;\n  margin: 0px;\n  margin-top: 36px;\n`;\n\nconst Title = styled.h1`\n  font-weight: bold;\n  font-size: 36px;\n  align-self: center;\n  margin: 0px;\n  color: ${props => props.theme.primaryTextColor};\n`;\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import styled, { css } from 'styled-components';\nimport color from 'color';\n\nexport const FancyButtonStyles = css`\n  font-weight: 400;\n  font-size: 24px;\n  align-self: center;\n  color: white;\n  margin-top: 20px;\n  background-color: ${props => props.theme.buttonColor};\n  border-radius: 36px;\n  border: none;\n  padding: 4px 100px;\n  text-decoration: none;\n  box-shadow: 0px 3px 45px -5px ${props =>\n      color(props.theme.buttonColor)\n        .alpha(0.4)\n        .rgb()\n        .toString()};\n  transition: 500ms all;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nconst FancyButton = styled.button`\n  ${FancyButtonStyles}\n`;\n\nexport default FancyButton;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { MouseEvent, ChangeEvent } from 'react';\n\nconst track: typeof ga = typeof ga === 'function' ? ga : (() => {}) as any;\n\nexport const init = (key: string) => track('create', key, 'auto');\n\nexport const trackPage = (path: string) => track('send', 'pageview', path);\n\nexport const trackEvent = ({ category, action }: { category: string; action: string }) => (\n  cb?: (event: MouseEvent<HTMLElement> | ChangeEvent<HTMLInputElement>) => void,\n) => (event: MouseEvent<HTMLElement> | ChangeEvent<HTMLInputElement>) => {\n  track('send', 'event', { eventCategory: category, eventAction: action });\n  if (cb) {\n    cb(event);\n  }\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import usePersistentState from '../../hooks/usePersistentState';\n\nexport type Theme = {\n  backgroundColor: string;\n  buttonColor: string;\n  isDark: boolean;\n  primaryTextColor: string;\n};\n\nexport const darkTheme: Theme = {\n  backgroundColor: '#202020',\n  buttonColor: '#2ac940',\n  isDark: true,\n  primaryTextColor: 'white',\n};\n\nexport const blueTheme: Theme = {\n  backgroundColor: '#1a1d29',\n  buttonColor: '#F50057',\n  isDark: true,\n  primaryTextColor: 'white',\n};\n\nexport const lightTheme: Theme = {\n  backgroundColor: '#ffffff',\n  buttonColor: '#2ac940',\n  isDark: false,\n  primaryTextColor: 'rgba(23,23,23,0.9)',\n};\n\nexport default (): [Theme, (val: Theme) => void] => {\n  return usePersistentState('theme', darkTheme);\n};\n","import React from 'react';\nimport './github-corner.css';\nimport { trackEvent } from '../../../src/utils/analytics';\n\nconst GithubCorner = ({ url }: { url: string }) => (\n  <a\n    onClick={trackEvent({ action: 'Go to github page', category: 'Landing' })()}\n    href={url}\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n  >\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#fff',\n        color: '#151513',\n        position: 'absolute',\n        top: 0,\n        border: 0,\n        right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { darkTheme } from '../../../src/shared/hooks';\nimport GithubCorner from './GithubCornerr';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout = ({ children }: Props) => (\n  <>\n    <ThemeProvider theme={darkTheme}>\n      <Container>\n        {children}\n        <GithubCorner url=\"https://github.com/ahmedlhanafy/cheesy-timer\" />\n      </Container>\n    </ThemeProvider>\n    <GlobalStyles />\n  </>\n);\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  background-color: ${props => props.theme.backgroundColor};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 0px 16px;\n  overflow-x: hidden;\n  box-sizing: border-box;\n`;\n\nconst GlobalStyles = createGlobalStyle`\n  * {\n    font-family: 'Pacifico',\"Segoe UI\", cursive;\n    user-select: none;\n    transition: color 0.7s ease-out, background-color 0.7s ease-out;\n  }\n  body {\n    margin: 0px;\n    padding: 0px;\n  }\n`;\nexport default Layout;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"screenshot1.png\" }) {\n          childImageSharp {\n            fluid(quality: 50) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Img\n        style={{ width: 400, marginTop: 16 }}\n        fluid={data.placeholderImage.childImageSharp.fluid}\n      />\n    )}\n  />\n);\nexport default Image;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  keywords: string[];\n  title: string;\n};\n\nconst SEO = ({ description, lang, meta, keywords, title }: Props) => (\n  <StaticQuery\n    query={graphql`\n      query DefaultSEOQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description;\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:title`,\n              content: title,\n            },\n            {\n              property: `og:description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:type`,\n              content: `website`,\n            },\n            {\n              name: `twitter:card`,\n              content: `summary`,\n            },\n            {\n              name: `twitter:creator`,\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: `twitter:title`,\n              content: title,\n            },\n            {\n              name: `twitter:description`,\n              content: metaDescription,\n            },\n            {\n              name: `twitter:image`,\n              content: 'https://cheesytimer.com/static/42c3024e9c91876aef19ca26bcbb889d/daefb/screenshot1.png',\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : [],\n            )\n            .concat(meta)}\n        >\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Pacifico\"\n            rel=\"stylesheet\"\n          />\n        </Helmet>\n      );\n    }}\n  />\n);\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nexport default SEO;\n","import React from 'react';\nimport styled, { css, keyframes } from 'styled-components';\n\nconst Spinner = () => (\n  <SpinnerContainer>\n    <Dot1 />\n    <Dot2 />\n  </SpinnerContainer>\n);\n\nconst SKRotateKeyFrames = keyframes`\n100% { transform: rotate(360deg); }\n`;\n\nconst SKBounceKeyFrames = keyframes`\n0%, 100% { \n      transform: scale(0.0);\n    } 50% { \n      transform: scale(1.0);\n    }\n`;\n\nconst DotStyle = css`\n  width: 60%;\n  height: 60%;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  background-color: #a6a6a682;\n  border-radius: 100%;\n\n  animation: ${SKBounceKeyFrames} 2s infinite ease-in-out;\n`;\nconst SpinnerContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  position: relative;\n  text-align: center;\n\n  animation: ${SKRotateKeyFrames} 2s infinite linear;\n`;\n\nconst Dot2 = styled.div`\n  ${DotStyle}\n  top: auto;\n  bottom: 0;\n  animation-delay: -1s;\n`;\n\nconst Dot1 = styled.div`\n  ${DotStyle}\n`;\n\nexport default Spinner;","export { default as Layout } from './Layout';\nexport { default as Image } from './Image';\nexport { default as SEO } from './SEO';\nexport { default as FancyButton } from './FancyButton';\nexport { default as Spinner } from './Spinner';"],"sourceRoot":""}
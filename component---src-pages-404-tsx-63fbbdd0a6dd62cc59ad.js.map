{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///../src/shared/global-styles.ts","webpack:///../src/shared/hooks/usePersistentTheme.ts","webpack:///./src/components/GithubCornerr.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/Image.tsx","webpack:///./src/components/SEO.tsx","webpack:///./src/components/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","Fragment","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","GlobalStyles","createGlobalStyle","_templateObject","darkTheme","backgroundColor","buttonColor","isDark","primaryTextColor","GithubCorner","url","react_default","href","className","aria-label","width","height","viewBox","style","fill","color","position","top","border","right","aria-hidden","transformOrigin","Container","styled","div","withConfig","displayName","componentId","theme","Layout","styled_components_browser_esm","GithubCornerr","Image","gatsby_browser_entry","gatsby_image_default","marginTop","fluid","placeholderImage","childImageSharp","_4004464385","SEO","description","lang","meta","keywords","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1841633742","defaultProps","components_Layout","components_Image","components_SEO"],"mappings":"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","file":"component---src-pages-404-tsx-63fbbdd0a6dd62cc59ad.js","sourcesContent":["import React from 'react';\nimport { SEO } from '../components';\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    font-family: 'Pacifico',\"Segoe UI\", cursive;\n    user-select: none;\n    transition: color 0.7s ease-out, background-color 0.7s ease-out;\n  }\n  body {\n    margin: 0px;\n    padding: 0px;\n  }\n`;","import usePersistentState from '../../hooks/usePersistentState';\n\nexport type Theme = {\n  backgroundColor: string;\n  buttonColor: string;\n  isDark: boolean;\n  primaryTextColor: string;\n};\n\nexport const darkTheme: Theme = {\n  backgroundColor: '#202020',\n  buttonColor: '#2ac940',\n  isDark: true,\n  primaryTextColor: 'white',\n};\n\nexport const blueTheme: Theme = {\n  backgroundColor: '#1a1d29',\n  buttonColor: '#F50057',\n  isDark: true,\n  primaryTextColor: 'white',\n};\n\nexport const lightTheme: Theme = {\n  backgroundColor: '#ffffff',\n  buttonColor: '#2ac940',\n  isDark: false,\n  primaryTextColor: 'rgba(23,23,23,0.9)',\n};\n\nexport default (): [Theme, (val: Theme) => void] => {\n  return usePersistentState('theme', darkTheme);\n};\n","import React from 'react';\nimport './github-corner.css';\n\nconst GithubCorner = ({ url }: { url: string }) => (\n  <a href={url} className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      style={{\n        fill: '#fff',\n        color: '#151513',\n        position: 'absolute',\n        top: 0,\n        border: 0,\n        right: 0,\n      }}\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        style={{ transformOrigin: '130px 106px' }}\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </a>\n);\n\nexport default GithubCorner;\n","import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from '../../../src/shared/global-styles';\nimport { darkTheme } from '../../../src/shared/hooks';\nimport GithubCorner from './GithubCornerr';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst Layout = ({ children }: Props) => (\n  <>\n    <ThemeProvider theme={darkTheme}>\n      <Container>\n        {children}\n        <GithubCorner url=\"https://github.com/ahmedlhanafy/cheesy-timer\" />\n      </Container>\n    </ThemeProvider>\n    <GlobalStyles />\n  </>\n);\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  background-color: ${props => props.theme.backgroundColor};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 0px 16px;\n  overflow-x: hidden;\n  box-sizing: border-box;\n`;\n\nexport default Layout;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"screenshot1.png\" }) {\n          childImageSharp {\n            fluid(quality: 50) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Img\n        style={{ width: 400, marginTop: 16 }}\n        fluid={data.placeholderImage.childImageSharp.fluid}\n      />\n    )}\n  />\n);\nexport default Image;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\ntype Props = {\n  description?: string;\n  lang?: string;\n  meta: any[];\n  keywords: string[];\n  title: string;\n};\n\nconst SEO = ({ description, lang, meta, keywords, title }: Props) => (\n  <StaticQuery\n    query={graphql`\n      query DefaultSEOQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `}\n    render={data => {\n      const metaDescription = description || data.site.siteMetadata.description;\n      return (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:title`,\n              content: title,\n            },\n            {\n              property: `og:description`,\n              content: metaDescription,\n            },\n            {\n              property: `og:type`,\n              content: `website`,\n            },\n            {\n              name: `twitter:card`,\n              content: `summary`,\n            },\n            {\n              name: `twitter:creator`,\n              content: data.site.siteMetadata.author,\n            },\n            {\n              name: `twitter:title`,\n              content: title,\n            },\n            {\n              name: `twitter:description`,\n              content: metaDescription,\n            },\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : [],\n            )\n            .concat(meta)}\n        />\n      );\n    }}\n  />\n);\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nexport default SEO;\n","export { default as Layout } from './Layout';\nexport { default as Image } from './Image';\nexport { default as SEO } from './SEO';"],"sourceRoot":""}